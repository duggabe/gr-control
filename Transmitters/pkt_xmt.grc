options:
  parameters:
    author: Barry Duggan
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: packet transmit
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: no_gui
    hier_block_src_path: '.:'
    id: pkt_xmt
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: pkt_xmt
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 12.0]
    rotation: 0
    state: enabled

blocks:
- name: access_key
  id: variable
  parameters:
    comment: ''
    value: '''11100001010110101110100010010011'''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [520, 12.0]
    rotation: 0
    state: enabled
- name: bpsk
  id: variable_constellation
  parameters:
    comment: ''
    const_points: '[-1-1j, -1+1j, 1+1j, 1-1j]'
    dims: '1'
    normalization: digital.constellation.AMPLITUDE_NORMALIZATION
    precision: '8'
    rot_sym: '4'
    soft_dec_lut: None
    sym_map: '[0, 1, 3, 2]'
    type: bpsk
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [360, 12.0]
    rotation: 0
    state: true
- name: excess_bw
  id: variable
  parameters:
    comment: ''
    value: '0.35'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 76.0]
    rotation: 0
    state: enabled
- name: hdr_format
  id: variable
  parameters:
    comment: header_format_default
    value: digital.header_format_default(access_key, 0)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [704, 12.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '48000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 12.0]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: '4'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 12.0]
    rotation: 0
    state: enabled
- name: usrp_rate
  id: variable
  parameters:
    comment: ''
    value: '768000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 76.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '0.5'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [472, 316.0]
    rotation: 0
    state: true
- name: blocks_tagged_stream_mux_0
  id: blocks_tagged_stream_mux
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    lengthtagname: packet_len
    maxoutbuf: '0'
    minoutbuf: '0'
    ninputs: '2'
    tag_preserve_head_pos: '0'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 152.0]
    rotation: 0
    state: true
- name: blocks_throttle2_0_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 164.0]
    rotation: 0
    state: true
- name: digital_constellation_modulator_0
  id: digital_constellation_modulator
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: bpsk
    differential: 'True'
    excess_bw: excess_bw
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_symbol: sps
    truncate: 'False'
    verbose: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 292.0]
    rotation: 0
    state: enabled
- name: digital_crc32_bb_0
  id: digital_crc32_bb
  parameters:
    affinity: ''
    alias: ''
    check: 'False'
    comment: ''
    lengthtagname: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
    packed: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [496, 156.0]
    rotation: 0
    state: true
- name: digital_protocol_formatter_bb_0
  id: digital_protocol_formatter_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    format: hdr_format
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [736, 124.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    FileName: '"./gr-logo.b64"'
    Pkt_len: '52'
    _source_code: "\"\"\"\nEmbedded Python Block: File Source to Tagged Stream\n\"\
      \"\"\n\nimport numpy as np\nfrom gnuradio import gr\nimport time\nimport pmt\n\
      import os.path\nimport sys\n\nclass blk(gr.sync_block):\n    def __init__(self,\
      \ FileName='None', Pkt_len=52):\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='EPB: File Source to Tagged Stream',\n         \
      \   in_sig=None,\n            out_sig=[np.uint8])\n        self.FileName = FileName\n\
      \        self.Pkt_len = Pkt_len\n        self.state = 0\n        self.pre_count\
      \ = 0\n        self.indx = 0\n        if (os.path.exists(self.FileName)):\n\
      \            # open input file\n            self.f_in = open (self.FileName,\
      \ 'rb')\n            self._eof = False\n        else:\n            print(FileName,\
      \ 'does not exist')\n            self._eof = True\n            self.state =\
      \ 3\n\n        self.char_list = [37,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,\
      \ 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85, 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,\
      \ 85,85,85,93]\n        self.c_len = len (self.char_list)\n        # print (self.c_len)\n\
      \n    def work(self, input_items, output_items):\n        if (self.state ==\
      \ 0):\n            # send phasing filler\n            key1 = pmt.intern(\"packet_len\"\
      )\n            val1 = pmt.from_long(self.c_len)\n            self.add_item_tag(0,\
      \ # Write to output port 0\n                self.indx,   # Index of the tag\n\
      \                key1,   # Key of the tag\n                val1    # Value of\
      \ the tag\n                )\n            self.indx += self.c_len\n        \
      \    i = 0\n            while (i < self.c_len):\n                output_items[0][i]\
      \ = self.char_list[i]\n                i += 1\n            self.pre_count +=\
      \ 1\n            if (self.pre_count > 99):\n                self.state = 1\n\
      \            return (self.c_len)\n        elif (self.state == 1):\n        \
      \    while (not (self._eof)):\n                buff = self.f_in.read (self.Pkt_len)\n\
      \                b_len = len(buff)\n                if b_len == 0:\n       \
      \             print ('End of file')\n                    self._eof = True\n\
      \                    self.f_in.close()\n                    self.state = 2\n\
      \                    self.pre_count = 0\n                    break\n       \
      \         # delay 500 ms\n                time.sleep (0.5)\n               \
      \ key0 = pmt.intern(\"packet_len\")\n                val0 = pmt.from_long(b_len)\n\
      \                self.add_item_tag(0, # Write to output port 0\n           \
      \         self.indx,   # Index of the tag\n                    key0,   # Key\
      \ of the tag\n                    val0    # Value of the tag\n             \
      \       )\n                self.indx += b_len\n                i = 0\n     \
      \           while (i < b_len):\n                    output_items[0][i] = buff[i]\n\
      \                    i += 1\n                return (b_len)\n        elif (self.state\
      \ == 2):\n            # send idle filler\n            key1 = pmt.intern(\"packet_len\"\
      )\n            val1 = pmt.from_long(self.c_len)\n            self.add_item_tag(0,\
      \ # Write to output port 0\n                self.indx,   # Index of the tag\n\
      \                key1,   # Key of the tag\n                val1    # Value of\
      \ the tag\n                )\n            self.indx += self.c_len\n        \
      \    i = 0\n            while (i < self.c_len):\n                output_items[0][i]\
      \ = self.char_list[i]\n                i += 1\n            self.pre_count +=\
      \ 1\n            if (self.pre_count > 4):\n                self.state = 3\n\
      \            return (self.c_len)\n        return (0)\n\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: '(''EPB: File Source to Tagged Stream'', ''blk'', [(''FileName'', "''None''"),
      (''Pkt_len'', ''52'')], [], [(''0'', ''byte'', 1)], '''', [''FileName'', ''Pkt_len''])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 164.0]
    rotation: 0
    state: true
- name: rational_resampler_xxx_0
  id: rational_resampler_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    fbw: '0'
    interp: (int)(usrp_rate/samp_rate)
    maxoutbuf: '0'
    minoutbuf: '0'
    taps: '[]'
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [680, 292.0]
    rotation: 0
    state: true
- name: virtual_sink_0_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: t1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1240, 164.0]
    rotation: 0
    state: true
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: t1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [72, 316.0]
    rotation: 0
    state: true
- name: zeromq_pub_sink_0
  id: zeromq_pub_sink
  parameters:
    address: tcp://127.0.0.1:49203
    affinity: ''
    alias: ''
    bind: 'True'
    comment: USRP sample rate = 768kHz
    drop_on_hwm: 'True'
    hwm: '-1'
    key: ''
    pass_tags: 'False'
    timeout: '100'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [872, 284.0]
    rotation: 0
    state: true

connections:
- [blocks_multiply_const_vxx_0, '0', rational_resampler_xxx_0, '0']
- [blocks_tagged_stream_mux_0, '0', virtual_sink_0_0, '0']
- [blocks_throttle2_0_0, '0', digital_crc32_bb_0, '0']
- [digital_constellation_modulator_0, '0', blocks_multiply_const_vxx_0, '0']
- [digital_crc32_bb_0, '0', blocks_tagged_stream_mux_0, '1']
- [digital_crc32_bb_0, '0', digital_protocol_formatter_bb_0, '0']
- [digital_protocol_formatter_bb_0, '0', blocks_tagged_stream_mux_0, '0']
- [epy_block_0, '0', blocks_throttle2_0_0, '0']
- [rational_resampler_xxx_0, '0', zeromq_pub_sink_0, '0']
- [virtual_source_0, '0', digital_constellation_modulator_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.6.0

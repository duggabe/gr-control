options:
  parameters:
    author: Barry Duggan
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: Station control module
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: xmt_rcv_switch
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: xmt_rcv_switch
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 12.0]
    rotation: 0
    state: enabled

blocks:
- name: freq
  id: variable_qtgui_entry
  parameters:
    comment: ''
    gui_hint: 2,0,1,1
    label: Receive Freq
    type: real
    value: 144.92e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [600, 12.0]
    rotation: 0
    state: true
- name: gain
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 1,0,1,3
    label: Rcv Gain
    min_len: '200'
    orient: Qt.Horizontal
    rangeType: float
    start: '0'
    step: '1'
    stop: '74.5'
    value: '50'
    widget: slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12.0]
    rotation: 0
    state: true
- name: offset
  id: variable_qtgui_chooser
  parameters:
    comment: ''
    gui_hint: 2,1,1,1
    label: Offset
    label0: '"-600kHz"'
    label1: '"0"'
    label2: '"+600kHz"'
    label3: ''
    label4: ''
    labels: '["-600kHz", "0", "+600kHz"]'
    num_opts: '0'
    option0: '-600000'
    option1: '0'
    option2: '600000'
    option3: '3'
    option4: '4'
    options: '[-600000, 0, 600000]'
    orient: Qt.QVBoxLayout
    type: int
    value: '0'
    widget: combo_box
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 444.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '576000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 140.0]
    rotation: 0
    state: enabled
- name: state
  id: guiextra_toggle_button_msg
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    gui_hint: 3,2,1,1
    initPressed: 'False'
    label: Transmit
    maxoutbuf: '0'
    minoutbuf: '0'
    outputmsgname: value
    pressBackgroundColor: red
    pressFontColor: default
    pressed: '1'
    relBackgroundColor: white
    relFontColor: default
    released: '0'
    type: int
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [80, 276.0]
    rotation: 0
    state: true
- name: tx_freq
  id: variable
  parameters:
    comment: ''
    value: freq+offset
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [104, 140.0]
    rotation: 0
    state: true
- name: tx_gain
  id: variable
  parameters:
    comment: ''
    value: '0.2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 12.0]
    rotation: 0
    state: true
- name: variable_qtgui_label_0
  id: variable_qtgui_label
  parameters:
    comment: ''
    formatter: None
    gui_hint: 2,2,1,1
    label: Transmit Freq
    type: real
    value: tx_freq
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [744, 12.0]
    rotation: 0
    state: enabled
- name: blocks_mute_xx_0
  id: blocks_mute_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    mute: 'False'
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [632, 152.0]
    rotation: 0
    state: true
- name: blocks_selector_0
  id: blocks_selector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    enabled: 'False'
    input_index: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '1'
    num_outputs: '1'
    output_index: '0'
    showports: 'False'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 484.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nTransmit / Receive Controller\n\"\"\"\n\nimport numpy as\
      \ np\nfrom gnuradio import gr\nimport time\nimport pmt\n\nclass blk(gr.sync_block):\
      \  # other base classes are basic_block, decim_block, interp_block\n    \"\"\
      \"\n    reads input from a message port\n    generates control messages\n  \
      \  \"\"\"\n    def __init__(self):\n        gr.sync_block.__init__(self,\n \
      \           name='XMT/RCV Control',   # will show up in GRC\n            in_sig=None,\n\
      \            out_sig=None)\n        self.message_port_register_in(pmt.intern('msg_in'))\n\
      \        self.message_port_register_out(pmt.intern('tx_mute'))\n        self.message_port_register_out(pmt.intern('rx_led'))\n\
      \        self.message_port_register_out(pmt.intern('ant_sw'))\n        self.message_port_register_out(pmt.intern('pa_sw'))\n\
      \        self.message_port_register_out(pmt.intern('rx_mute'))\n        self.set_msg_handler(pmt.intern('msg_in'),\
      \ self.handle_msg)\n\n    def handle_msg(self, msg):\n        try:\n       \
      \     new_val = pmt.to_python(pmt.cdr(msg))\n        except Exception as e:\n\
      \            gr.log.error(\"Error with message conversion: %s\" % str(e))\n\
      \        # print (new_val)\n        if (new_val > 0):\n                # print\
      \ (\"switching to transmit\")\n\n                # mute receive\n          \
      \      self.message_port_pub(pmt.intern('rx_mute'), pmt.to_pmt(True))\n\n  \
      \              # turn off rcv LED\n                self.message_port_pub(pmt.intern('rx_led'),\n\
      \                    pmt.cons(pmt.intern('pressed'),\n                    pmt.from_bool(False)))\n\
      \n                # switch antenna from rcv to xmt\n                # turn on\
      \ GPIO pin\n\n                # turn on Antenna LED\n                self.message_port_pub(pmt.intern('ant_sw'),\n\
      \                    pmt.cons(pmt.intern('pressed'),\n                    pmt.from_bool(True)))\n\
      \n                # delay 10 ms\n                time.sleep (0.01)\n\n     \
      \           # turn on power amp\n                # turn on GPIO pin\n\n    \
      \            # turn on Amp LED\n                self.message_port_pub(pmt.intern('pa_sw'),\n\
      \                    pmt.cons(pmt.intern('pressed'),\n                    pmt.from_bool(True)))\n\
      \n                # delay 10 ms\n                time.sleep (0.01)\n\n     \
      \           # unmute transmit (enable Selector)\n                self.message_port_pub(pmt.intern('tx_mute'),\
      \ pmt.to_pmt(True))\n\n        else:\n                # print (\"switching to\
      \ receive\")\n\n                # mute transmit (disable Selector)\n       \
      \         self.message_port_pub(pmt.intern('tx_mute'), pmt.to_pmt(False))\n\n\
      \                # turn off power amp\n                # turn off GPIO pin\n\
      \n                # turn off Amp LED\n                self.message_port_pub(pmt.intern('pa_sw'),\n\
      \                    pmt.cons(pmt.intern('pressed'),\n                    pmt.from_bool(False)))\n\
      \n                # delay 10 ms\n                time.sleep (0.01)\n\n     \
      \           # switch antenna from xmt to rcv\n                # turn off GPIO\
      \ pin\n\n                # turn off Antenna LED\n                self.message_port_pub(pmt.intern('ant_sw'),\n\
      \                    pmt.cons(pmt.intern('pressed'),\n                    pmt.from_bool(False)))\n\
      \n                # delay 10 ms\n                time.sleep (0.01)\n\n     \
      \           # unmute receive\n                self.message_port_pub(pmt.intern('rx_mute'),\
      \ pmt.to_pmt(False))\n\n                # turn on rcv LED\n                self.message_port_pub(pmt.intern('rx_led'),\n\
      \                    pmt.cons(pmt.intern('pressed'),\n                    pmt.from_bool(True)))\n\
      \n\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('XMT/RCV Control', 'blk', [], [('msg_in', 'message', 1)], [('rx_mute',
      'message', 1), ('pa_sw', 'message', 1), ('ant_sw', 'message', 1), ('rx_led',
      'message', 1), ('tx_mute', 'message', 1)], '\n    reads input from a message
      port\n    generates control messages\n    ', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [344, 256.0]
    rotation: 0
    state: true
- name: guiextra_ledindicator_0
  id: guiextra_ledindicator
  parameters:
    affinity: ''
    alias: ''
    cellalignment: '2'
    comment: ''
    gui_hint: 0,0,1,1
    label: '"Receive"'
    maxSize: '40'
    offColor: gray
    onColor: lime
    position: '1'
    state: 'True'
    verticalalignment: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [600, 372.0]
    rotation: 0
    state: true
- name: guiextra_ledindicator_1
  id: guiextra_ledindicator
  parameters:
    affinity: ''
    alias: ''
    cellalignment: '2'
    comment: ''
    gui_hint: 0,1,1,1
    label: '"Antenna"'
    maxSize: '40'
    offColor: lime
    onColor: yellow
    position: '1'
    state: 'False'
    verticalalignment: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [600, 308.0]
    rotation: 0
    state: true
- name: guiextra_ledindicator_2
  id: guiextra_ledindicator
  parameters:
    affinity: ''
    alias: ''
    cellalignment: '2'
    comment: ''
    gui_hint: 0,2,1,1
    label: '"Power Amp"'
    maxSize: '40'
    offColor: gray
    onColor: red
    position: '1'
    state: 'False'
    verticalalignment: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [600, 244.0]
    rotation: 0
    state: true
- name: iio_pluto_sink_0
  id: iio_pluto_sink
  parameters:
    affinity: ''
    alias: ''
    attenuation1: '10.0'
    auto_filter: 'True'
    bandwidth: '200000'
    buffer_size: '16384'
    comment: ''
    cyclic: 'False'
    filter: ''
    frequency: int(tx_freq)
    samplerate: samp_rate
    uri: ip:192.168.3.1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [872, 452.0]
    rotation: 0
    state: true
- name: iio_pluto_source_0
  id: iio_pluto_source
  parameters:
    affinity: ''
    alias: ''
    auto_filter: 'True'
    bandwidth: '200000'
    bbdc: 'True'
    buffer_size: '16384'
    comment: ''
    filter: ''
    frequency: int(freq)
    gain1: '''manual'''
    manual_gain1: gain
    maxoutbuf: '0'
    minoutbuf: '0'
    quadrature: 'True'
    rfdc: 'True'
    samplerate: samp_rate
    uri: ip:192.168.3.1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 12.0]
    rotation: 0
    state: true
- name: low_pass_filter_0
  id: low_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    cutoff_freq: '5000'
    decim: '1'
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fir_filter_ccf
    width: '1000'
    win: firdes.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [680, 468.0]
    rotation: 0
    state: true
- name: zeromq_pub_sink_0
  id: zeromq_pub_sink
  parameters:
    address: tcp://127.0.0.1:49201
    affinity: ''
    alias: ''
    comment: ''
    hwm: '-1'
    pass_tags: 'False'
    timeout: '100'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [768, 148.0]
    rotation: 0
    state: true
- name: zeromq_sub_source_0
  id: zeromq_sub_source
  parameters:
    address: tcp://127.0.0.1:49203
    affinity: ''
    alias: ''
    comment: ''
    hwm: '-1'
    maxoutbuf: '0'
    minoutbuf: '0'
    pass_tags: 'False'
    timeout: '100'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 484.0]
    rotation: 0
    state: true

connections:
- [blocks_mute_xx_0, '0', zeromq_pub_sink_0, '0']
- [blocks_selector_0, '0', low_pass_filter_0, '0']
- [epy_block_0, ant_sw, guiextra_ledindicator_1, state]
- [epy_block_0, pa_sw, guiextra_ledindicator_2, state]
- [epy_block_0, rx_led, guiextra_ledindicator_0, state]
- [epy_block_0, rx_mute, blocks_mute_xx_0, set_mute]
- [epy_block_0, tx_mute, blocks_selector_0, en]
- [iio_pluto_source_0, '0', blocks_mute_xx_0, '0']
- [low_pass_filter_0, '0', iio_pluto_sink_0, '0']
- [state, state, epy_block_0, msg_in]
- [zeromq_sub_source_0, '0', blocks_selector_0, '0']

metadata:
  file_format: 1
